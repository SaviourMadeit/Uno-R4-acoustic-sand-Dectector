{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://F%3A/apps/Test%20Sandox/Development/Test-On/Uno-R4-acoustic-sand-Dectector-main/Web%20app/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://F%3A/apps/Test%20Sandox/Development/Test-On/Uno-R4-acoustic-sand-Dectector-main/Web%20app/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file://F%3A/apps/Test%20Sandox/Development/Test-On/Uno-R4-acoustic-sand-Dectector-main/Web%20app/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,2KACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,sMAAM,UAAU,CAG5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,sMAAM,UAAU,CAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file://F%3A/apps/Test%20Sandox/Development/Test-On/Uno-R4-acoustic-sand-Dectector-main/Web%20app/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE"}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file://F%3A/apps/Test%20Sandox/Development/Test-On/Uno-R4-acoustic-sand-Dectector-main/Web%20app/src/app/dashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Alert, AlertTitle } from '@/components/ui/alert';\nimport { Badge } from '@/components/ui/badge';\nimport { Activity, AlertTriangle, CheckCircle } from 'lucide-react';\n\n// Define types for data\ninterface SensorData {\n  sandLevel: number;\n  samplingRate?: number;\n  sampleInterval?: number;\n}\n \ninterface HistoricalData {\n  time: string;\n  sandLevel: number; \n}\n\ntype StatusType = 'normal' | 'warning' | 'critical';\n\n// const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://192.168.0.106';\n\nconst PipelineMonitor: React.FC = () => {\n  const [currentData, setCurrentData] = useState<SensorData | null>(null);\n  const [historicalData, setHistoricalData] = useState<HistoricalData[]>([]);\n  const [status, setStatus] = useState<StatusType>('normal');\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n \n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      // Use the local proxy endpoint instead of calling API_URL directly.\n      const response = await fetch('/api');\n      if (!response.ok) {\n        throw new Error(`Network response was not ok: ${response.statusText}`);\n      }\n      const data: SensorData = await response.json();\n  \n      // if (!data.sandLevel) throw new Error('0ops! Invalid data format');  \n\n      if (data.sandLevel === undefined || data.sandLevel === null) {\n        throw new Error('0ops! Invalid data format');\n      }\n  \n      setCurrentData(data);\n      setHistoricalData((prev) => [\n        ...prev,\n        {\n          time: new Date().toLocaleTimeString(),\n          sandLevel: parseFloat(data.sandLevel.toFixed(2)),\n        },\n      ].slice(-30)); // Keep last 30 readings\n  \n      if (data.sandLevel > 1000) {\n        setStatus('critical');\n      } else if (data.sandLevel > 500) {\n        setStatus('warning');\n      } else {\n        setStatus('normal');\n      }\n  \n      setError(null);\n    } catch (err) {\n      setError(`Failed to fetch data from sensor: ${\n        err instanceof Error ? err.message : 'Unknown error'\n      }`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(fetchData, 1000);\n    return () => clearInterval(interval);\n  }, [fetchData]);\n\n  const getStatusColor = (status: StatusType) => {\n    switch (status) {\n      case 'critical':\n        return 'bg-red-500';\n      case 'warning':\n        return 'bg-yellow-500';\n      default:\n        return 'bg-green-500';\n    }\n  };\n\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-3xl font-bold mb-2\"> Gas Pipeline Acoustic Sand Monitoring Device</h1>\n        <p className=\"text-gray-500\">Real-time sand detection system</p>\n      </div>\n\n      {error && (\n        <Alert variant=\"destructive\" className=\"mb-6\">\n          <AlertTriangle className=\"h-4 w-4\" />    \n          <AlertTitle>{error}</AlertTitle>\n        </Alert>\n      )}\n\n      {isLoading && <div className=\"text-center\">Loading...</div>}\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Activity className=\"h-5 w-5\" />\n              Current Sand Level\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-4xl font-bold mb-2\">\n              {currentData?.sandLevel?.toFixed(2) || '---'}\n            </div>\n            <Badge className={getStatusColor(status)}>\n              {status.toUpperCase()}\n            </Badge>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>System Status</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between items-center\">\n                <span>Sampling Rate:</span>\n                <span>{currentData?.samplingRate?.toFixed(1) || '---'} Hz</span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span>Sample Interval:</span>\n                <span>{currentData?.sampleInterval || '---'} ms</span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span>Connection:</span>\n                <Badge variant={error ? 'destructive' : 'default'}>\n                  {error ? 'DISCONNECTED' : 'CONNECTED'}\n                </Badge>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Alert Status</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex items-center gap-2\">\n              {status === 'normal' ? (\n                <CheckCircle className=\"h-5 w-5 text-green-500\" />\n              ) : (\n                <AlertTriangle className=\"h-5 w-5 text-yellow-500\" />\n              )}\n              <span className=\"text-lg\">\n                {status === 'normal'\n                  ? 'System operating normally'\n                  : `${status.charAt(0).toUpperCase() + status.slice(1)} - Check pipeline`}\n              </span>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Sand Level Trend</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"h-[400px]\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={historicalData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                  dataKey=\"time\"\n                  tick={{ fontSize: 12 }}\n                  interval=\"preserveStartEnd\"\n                />\n                <YAxis />\n                <Tooltip />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"sandLevel\"\n                  stroke=\"#2563eb\"\n                  strokeWidth={2}\n                  dot={false}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default PipelineMonitor;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 693, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 699, "column": 0}, "map": {"version":3,"sources":["file://F%3A/apps/Test%20Sandox/Development/Test-On/Uno-R4-acoustic-sand-Dectector-main/Web%20app/src/app/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport PipelineMonitor from './dashboard';\n\nexport default function Home() {\n  return <PipelineMonitor />;\n}"],"names":[],"mappings":";;;;AAGA;AAFA;;;AAIe,SAAS;IACtB,qBAAO,8OAAC,wHAAA,CAAA,UAAe;;;;;AACzB"}},
    {"offset": {"line": 714, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}